#!/usr/bin/env bash

list=true

for arg; do
    case "$arg" in
        (-l|--list)
            list=true
            ;;

        (--email)
            list=false
            ;;

        (*)
            echo "error: unrecognized argument '$arg'" >&2
            exit 1
    esac
done

# $1 should be the username
# $2 is the command line or command of the process to check
is_user_running_process()
{
    ps -u "$1" -o cmd | grep -q "^$2$" || ps -u "$1" -o comm | grep -q "^$2$"
}

maybe_send_email()
{
    hour="$(date -d "@$last_date" +%H | grep '[1-9]\?[0-9]')"
    [[ $hour < 10 || $hour -ge 17 ]] && return
    time_diff=$((60 * 60 * 6))
    send_email=false
    if [[ -z "$orig_email" ]]; then
         if [[ $(($last_date - $orig_date)) > $time_diff ]]; then
             send_email=true
         fi
     else
        if [[ $(($last_date - $last_email)) > $time_diff ) ]]; then
            send_email=true
        fi
    fi
    if $send_email; then
        if [[ -z "$orig_email" ]]; then
            orig_email=$last_date
        fi
        last_email=$last_date
        echo "TODO - actually send email"
    fi
}

dir=".screensaver-check/$HOSTNAME"
mkdir -p "$dir"

for u in $(users | tr ' ' '\n' | sort -u); do
    screensaver_running=false

    if is_user_running_process "$u" xlock; then
        screensaver_running=true
    else
        for p in $(ls /usr/libexec/xscreensaver); do
            if is_user_running_process "$u" "$p -root"; then
                screensaver_running=true
                break
            fi
        done
    fi

    if $list; then
        $screensaver_running && echo "$u"
        continue
    fi

    file="$dir/$u"
    if $screensaver_running; then
        if [[ ! -f "$file" ]]; then
            date="$(date +%s)"
            echo "$date $date" >"$file"
        else
            read orig_date last_date orig_email last_email <"$file"
            last_date="$(date +%s)"
            maybe_send_email
            echo "$orig_date $last_date $orig_email $last_email" >"$file"
        fi
    else
        rm "$file"
    fi
done
